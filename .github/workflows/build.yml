name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Configure
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DSDL_UNIX_CONSOLE_BUILD:BOOL=ON

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Install (generate dist/)
        run: cmake --install build --prefix dist

      - name: Package
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            tar -czf ${{ runner.os }}.tar.gz -C dist .
          elif [ "${{ runner.os }}" == "macOS" ]; then
            tar -czf ${{ runner.os }}.tar.gz -C dist .
          else
            powershell Compress-Archive -Path dist\* -DestinationPath windows.zip
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-build
          path: |
            *.tar.gz
            *.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
